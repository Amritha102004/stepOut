<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Coupon - StepOut</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.min.css">

    <link rel="stylesheet" href="/css/admin/header.css">
    <link rel="stylesheet" href="/css/admin/sidebar.css">
    <link rel="stylesheet" href="/css/admin/product.css">
    <style>
        .form-section {
            background-color: #fff;
            border-radius: 8px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
        }

        .section-title {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 20px;
            color: #333;
            border-bottom: 2px solid #f0f0f0;
            padding-bottom: 10px;
        }

        .discount-type-cards {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-bottom: 20px;
        }

        .discount-card {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .discount-card:hover {
            border-color: #007bff;
            background-color: #f8f9ff;
        }

        .discount-card.selected {
            border-color: #007bff;
            background-color: #e7f3ff;
        }

        .discount-card i {
            font-size: 2rem;
            margin-bottom: 10px;
            color: #6c757d;
        }

        .discount-card.selected i {
            color: #007bff;
        }

        .usage-stats {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .stat-item {
            text-align: center;
            margin-bottom: 15px;
        }

        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            display: block;
        }

        .stat-label {
            font-size: 14px;
            opacity: 0.9;
        }

        .warning-box {
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }

        .warning-box .warning-icon {
            color: #856404;
            margin-right: 10px;
        }

        .multi-select-container {
            position: relative;
        }

        .multi-select-dropdown {
            border: 1px solid #ced4da;
            border-radius: 6px;
            min-height: 38px;
            padding: 6px 12px;
            cursor: pointer;
            background-color: white;
        }

        .multi-select-options {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #ced4da;
            border-top: none;
            border-radius: 0 0 6px 6px;
            max-height: 200px;
            overflow-y: auto;
            z-index: 1000;
            display: none;
        }

        .multi-select-option {
            padding: 8px 12px;
            cursor: pointer;
            border-bottom: 1px solid #f0f0f0;
        }

        .multi-select-option:hover {
            background-color: #f8f9fa;
        }

        .multi-select-option.selected {
            background-color: #e7f3ff;
            color: #0066cc;
        }

        .selected-items {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
            margin-top: 5px;
        }

        .selected-item {
            background-color: #e7f3ff;
            color: #0066cc;
            padding: 2px 8px;
            border-radius: 4px;
            font-size: 12px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .selected-item .remove {
            cursor: pointer;
            font-weight: bold;
        }

        @media (max-width: 768px) {
            .discount-type-cards {
                grid-template-columns: 1fr;
            }

            .form-section {
                padding: 20px;
            }
        }
    </style>
</head>

<body>

    <%- include('./partials/header') %>
    <%- include('./partials/sidebar', {activePage: 'coupons' }) %>

    <div class="admin-content">
        <!-- Breadcrumb -->
        <div class="content-header">
            <h3 class="mb-0 label">Edit Coupon</h3>
            <nav aria-label="breadcrumb" class="mb-4">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="/admin/dashboard" class="text-decoration-none text-dark">Dashboard</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="/admin/coupons" class="text-decoration-none text-dark">Coupons</a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">
                        Edit Coupon
                    </li>
                </ol>
            </nav>
        </div>

        <div class="row">
            <div class="col-lg-8">
                <!-- Usage Warning -->
                <% if (coupon.usedCount > 0) { %>
                    <div class="warning-box">
                        <i class="fas fa-exclamation-triangle warning-icon"></i>
                        <strong>Warning:</strong> This coupon has been used <%= coupon.usedCount %> time(s). 
                        Modifying certain fields may affect existing users.
                    </div>
                <% } %>

                <form id="editCouponForm">
                    <!-- Basic Information -->
                    <div class="form-section">
                        <h4 class="section-title">
                            <i class="fas fa-info-circle me-2"></i>Basic Information
                        </h4>
                        
                        <div class="mb-3">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="code" name="code" 
                                       placeholder="Coupon Code" value="<%= coupon.code %>"
                                       style="text-transform: uppercase;">
                                <label for="code">Coupon Code *</label>
                            </div>
                        </div>

                        <div class="mb-3">
                            <div class="form-floating">
                                <textarea class="form-control" id="description" name="description" 
                                          placeholder="Description" style="height: 100px;"><%= coupon.description %></textarea>
                                <label for="description">Description</label>
                            </div>
                        </div>
                    </div>

                    <!-- Discount Configuration -->
                    <div class="form-section">
                        <h4 class="section-title">
                            <i class="fas fa-percentage me-2"></i>Discount Configuration
                        </h4>

                        <div class="discount-type-cards">
                            <div class="discount-card <%= coupon.discountType === 'percentage' ? 'selected' : '' %>" 
                                 data-type="percentage">
                                <i class="fas fa-percentage"></i>
                                <h5>Percentage</h5>
                                <p>Discount as percentage of order value</p>
                                <input type="radio" name="discountType" value="percentage" 
                                       <%= coupon.discountType === 'percentage' ? 'checked' : '' %> hidden>
                            </div>
                            <div class="discount-card <%= coupon.discountType === 'fixed' ? 'selected' : '' %>" 
                                 data-type="fixed">
                                <i class="fas fa-rupee-sign"></i>
                                <h5>Fixed Amount</h5>
                                <p>Fixed discount amount in rupees</p>
                                <input type="radio" name="discountType" value="fixed" 
                                       <%= coupon.discountType === 'fixed' ? 'checked' : '' %> hidden>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <input type="number" class="form-control" id="discountValue" 
                                           name="discountValue" placeholder="Discount Value" 
                                           min="0" step="0.01" value="<%= coupon.discountValue %>">
                                    <label for="discountValue">Discount Value *</label>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3" id="maxDiscountContainer" 
                                 style="display: <%= coupon.discountType === 'percentage' ? 'block' : 'none' %>;">
                                <div class="form-floating">
                                    <input type="number" class="form-control" id="maxDiscountValue" 
                                           name="maxDiscountValue" placeholder="Maximum Discount" 
                                           min="0" step="0.01" value="<%= coupon.maxDiscountValue || '' %>">
                                    <label for="maxDiscountValue">Maximum Discount (₹)</label>
                                    <div class="form-text">Optional: Set maximum discount amount for percentage coupons</div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <div class="form-floating">
                                <input type="number" class="form-control" id="minOrderAmount" 
                                       name="minOrderAmount" placeholder="Minimum Order Amount" 
                                       min="0" step="0.01" value="<%= coupon.minOrderAmount %>">
                                <label for="minOrderAmount">Minimum Order Amount (₹)</label>
                                <div class="form-text">Minimum order value required to use this coupon</div>
                            </div>
                        </div>
                    </div>

                    <!-- Validity Period -->
                    <div class="form-section">
                        <h4 class="section-title">
                            <i class="fas fa-calendar-alt me-2"></i>Validity Period
                        </h4>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <input type="datetime-local" class="form-control" id="startDate" 
                                           name="startDate" value="<%= new Date(coupon.startDate).toISOString().slice(0, 16) %>">
                                    <label for="startDate">Start Date & Time *</label>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <input type="datetime-local" class="form-control" id="expiryDate" 
                                           name="expiryDate" value="<%= new Date(coupon.expiryDate).toISOString().slice(0, 16) %>">
                                    <label for="expiryDate">Expiry Date & Time *</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Usage Limits -->
                    <div class="form-section">
                        <h4 class="section-title">
                            <i class="fas fa-users me-2"></i>Usage Limits
                        </h4>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <input type="number" class="form-control" id="usageLimitGlobal" 
                                           name="usageLimitGlobal" placeholder="Global Usage Limit" 
                                           min="1" value="<%= coupon.usageLimitGlobal || '' %>">
                                    <label for="usageLimitGlobal">Global Usage Limit</label>
                                    <div class="form-text">Total number of times this coupon can be used (leave empty for unlimited)</div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <input type="number" class="form-control" id="usageLimitPerUser" 
                                           name="usageLimitPerUser" placeholder="Per User Limit" 
                                           min="1" value="<%= coupon.usageLimitPerUser %>">
                                    <label for="usageLimitPerUser">Usage Limit Per User</label>
                                    <div class="form-text">How many times each user can use this coupon</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Applicability -->
                    <div class="form-section">
                        <h4 class="section-title">
                            <i class="fas fa-filter me-2"></i>Applicability
                        </h4>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="applicableCategories" class="form-label">Applicable Categories</label>
                                <div class="multi-select-container">
                                    <div class="multi-select-dropdown" data-target="applicableCategories">
                                        <span class="placeholder">Select categories (leave empty for all)</span>
                                    </div>
                                    <div class="multi-select-options" id="categoriesOptions">
                                        <% if (categories && categories.length > 0) { %>
                                            <% categories.forEach(category => { %>
                                                <div class="multi-select-option 
                                                     <%= coupon.applicableCategories.some(cat => cat._id.toString() === category._id.toString()) ? 'selected' : '' %>" 
                                                     data-value="<%= category._id %>">
                                                    <%= category.name %>
                                                </div>
                                            <% }); %>
                                        <% } %>
                                    </div>
                                    <div class="selected-items" id="selectedCategories">
                                        <% if (coupon.applicableCategories && coupon.applicableCategories.length > 0) { %>
                                            <% coupon.applicableCategories.forEach(category => { %>
                                                <div class="selected-item" data-value="<%= category._id %>">
                                                    <%= category.name %>
                                                    <span class="remove" onclick="removeSelectedItem('applicableCategories', '<%= category._id %>')">&times;</span>
                                                </div>
                                            <% }); %>
                                        <% } %>
                                    </div>
                                </div>
                                <select name="applicableCategories" id="applicableCategories" multiple hidden>
                                    <% if (coupon.applicableCategories && coupon.applicableCategories.length > 0) { %>
                                        <% coupon.applicableCategories.forEach(category => { %>
                                            <option value="<%= category._id %>" selected><%= category.name %></option>
                                        <% }); %>
                                    <% } %>
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="applicableProducts" class="form-label">Applicable Products</label>
                                <div class="multi-select-container">
                                    <div class="multi-select-dropdown" data-target="applicableProducts">
                                        <span class="placeholder">Select products (leave empty for all)</span>
                                    </div>
                                    <div class="multi-select-options" id="productsOptions">
                                        <% if (products && products.length > 0) { %>
                                            <% products.forEach(product => { %>
                                                <div class="multi-select-option 
                                                     <%= coupon.applicableProducts.some(prod => prod._id.toString() === product._id.toString()) ? 'selected' : '' %>" 
                                                     data-value="<%= product._id %>">
                                                    <%= product.name %>
                                                </div>
                                            <% }); %>
                                        <% } %>
                                    </div>
                                    <div class="selected-items" id="selectedProducts">
                                        <% if (coupon.applicableProducts && coupon.applicableProducts.length > 0) { %>
                                            <% coupon.applicableProducts.forEach(product => { %>
                                                <div class="selected-item" data-value="<%= product._id %>">
                                                    <%= product.name %>
                                                    <span class="remove" onclick="removeSelectedItem('applicableProducts', '<%= product._id %>')">&times;</span>
                                                </div>
                                            <% }); %>
                                        <% } %>
                                    </div>
                                </div>
                                <select name="applicableProducts" id="applicableProducts" multiple hidden>
                                    <% if (coupon.applicableProducts && coupon.applicableProducts.length > 0) { %>
                                        <% coupon.applicableProducts.forEach(product => { %>
                                            <option value="<%= product._id %>" selected><%= product.name %></option>
                                        <% }); %>
                                    <% } %>
                                </select>
                            </div>
                        </div>
                    </div>

                    <!-- Status -->
                    <div class="form-section">
                        <h4 class="section-title">
                            <i class="fas fa-toggle-on me-2"></i>Status
                        </h4>

                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="isActive" 
                                   name="isActive" <%= coupon.isActive ? 'checked' : '' %>>
                            <label class="form-check-label" for="isActive">
                                Active (Users can use this coupon)
                            </label>
                        </div>
                    </div>
                </form>
            </div>

            <div class="col-lg-4">
                <!-- Usage Statistics -->
                <div class="form-section">
                    <h4 class="section-title">
                        <i class="fas fa-chart-bar me-2"></i>Usage Statistics
                    </h4>
                    
                    <div class="usage-stats">
                        <div class="stat-item">
                            <span class="stat-number"><%= coupon.usedCount %></span>
                            <span class="stat-label">Times Used</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number"><%= coupon.usedBy.length %></span>
                            <span class="stat-label">Unique Users</span>
                        </div>
                        <% if (coupon.usageLimitGlobal) { %>
                            <div class="stat-item">
                                <span class="stat-number"><%= coupon.usageLimitGlobal - coupon.usedCount %></span>
                                <span class="stat-label">Remaining Uses</span>
                            </div>
                        <% } %>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="form-section">
                    <h4 class="section-title">
                        <i class="fas fa-cog me-2"></i>Actions
                    </h4>
                    
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-dark btn-lg" onclick="updateCoupon()">
                            <i class="fas fa-save me-2"></i>Update Coupon
                        </button>
                        <a href="/admin/coupons" class="btn btn-outline-secondary btn-lg">
                            <i class="fas fa-arrow-left me-2"></i>Back to Coupons
                        </a>
                        <% if (coupon.usedCount === 0) { %>
                            <button type="button" class="btn btn-outline-danger btn-lg" onclick="deleteCoupon()">
                                <i class="fas fa-trash me-2"></i>Delete Coupon
                            </button>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.all.min.js"></script>
    <script src="/js/admin/sidebar.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Discount type selection
            document.querySelectorAll('.discount-card').forEach(card => {
                card.addEventListener('click', function() {
                    // Remove selected class from all cards
                    document.querySelectorAll('.discount-card').forEach(c => c.classList.remove('selected'));
                    
                    // Add selected class to clicked card
                    this.classList.add('selected');
                    
                    // Check the radio button
                    const radio = this.querySelector('input[type="radio"]');
                    radio.checked = true;
                    
                    // Show/hide max discount field for percentage type
                    const maxDiscountContainer = document.getElementById('maxDiscountContainer');
                    if (radio.value === 'percentage') {
                        maxDiscountContainer.style.display = 'block';
                    } else {
                        maxDiscountContainer.style.display = 'none';
                    }
                });
            });

            // Multi-select functionality
            function initMultiSelect(containerId, selectId) {
                const container = document.querySelector(`[data-target="${selectId}"]`);
                const options = document.getElementById(containerId);
                const select = document.getElementById(selectId);
                const selectedContainer = document.getElementById(`selected${selectId.charAt(0).toUpperCase() + selectId.slice(1).replace('applicable', '')}`);

                // Update placeholder on load
                updatePlaceholder(container, selectedContainer);

                container.addEventListener('click', function() {
                    options.style.display = options.style.display === 'block' ? 'none' : 'block';
                });

                document.addEventListener('click', function(e) {
                    if (!container.contains(e.target) && !options.contains(e.target)) {
                        options.style.display = 'none';
                    }
                });

                options.addEventListener('click', function(e) {
                    if (e.target.classList.contains('multi-select-option')) {
                        const value = e.target.dataset.value;
                        const text = e.target.textContent;
                        
                        if (e.target.classList.contains('selected')) {
                            // Remove selection
                            e.target.classList.remove('selected');
                            
                            // Remove from select
                            const option = select.querySelector(`option[value="${value}"]`);
                            if (option) option.remove();
                            
                            // Remove from display
                            const selectedItem = selectedContainer.querySelector(`[data-value="${value}"]`);
                            if (selectedItem) selectedItem.remove();
                        } else {
                            // Add selection
                            e.target.classList.add('selected');
                            
                            // Add to select
                            const option = document.createElement('option');
                            option.value = value;
                            option.textContent = text;
                            option.selected = true;
                            select.appendChild(option);
                            
                            // Add to display
                            const selectedItem = document.createElement('div');
                            selectedItem.className = 'selected-item';
                            selectedItem.dataset.value = value;
                            selectedItem.innerHTML = `
                                ${text}
                                <span class="remove" onclick="removeSelectedItem('${selectId}', '${value}')">&times;</span>
                            `;
                            selectedContainer.appendChild(selectedItem);
                        }
                        
                        updatePlaceholder(container, selectedContainer);
                    }
                });
            }

            function updatePlaceholder(container, selectedContainer) {
                const placeholder = container.querySelector('.placeholder');
                const count = selectedContainer.children.length;
                
                if (count === 0) {
                    placeholder.textContent = placeholder.textContent.includes('categories') ? 
                        'Select categories (leave empty for all)' : 
                        'Select products (leave empty for all)';
                } else {
                    placeholder.textContent = `${count} item${count > 1 ? 's' : ''} selected`;
                }
            }

            window.removeSelectedItem = function(selectId, value) {
                const select = document.getElementById(selectId);
                const option = select.querySelector(`option[value="${value}"]`);
                if (option) option.remove();
                
                const selectedContainer = document.getElementById(`selected${selectId.charAt(0).toUpperCase() + selectId.slice(1).replace('applicable', '')}`);
                const selectedItem = selectedContainer.querySelector(`[data-value="${value}"]`);
                if (selectedItem) selectedItem.remove();
                
                const optionElement = document.querySelector(`#${selectId.replace('applicable', '').toLowerCase()}Options [data-value="${value}"]`);
                if (optionElement) optionElement.classList.remove('selected');
                
                const container = document.querySelector(`[data-target="${selectId}"]`);
                updatePlaceholder(container, selectedContainer);
            };

            // Initialize multi-selects
            initMultiSelect('categoriesOptions', 'applicableCategories');
            initMultiSelect('productsOptions', 'applicableProducts');
        });

        // Update coupon function
        function updateCoupon() {
            const form = document.getElementById('editCouponForm');
            const formData = new FormData(form);
            
            // Convert FormData to JSON
            const data = {};
            formData.forEach((value, key) => {
                if (data[key]) {
                    if (Array.isArray(data[key])) {
                        data[key].push(value);
                    } else {
                        data[key] = [data[key], value];
                    }
                } else {
                    data[key] = value;
                }
            });

            // Get selected categories and products
            const selectedCategories = Array.from(document.getElementById('applicableCategories').selectedOptions).map(option => option.value);
            const selectedProducts = Array.from(document.getElementById('applicableProducts').selectedOptions).map(option => option.value);
            
            data.applicableCategories = selectedCategories;
            data.applicableProducts = selectedProducts;
            data.isActive = document.getElementById('isActive').checked;

            fetch(`/admin/coupons/<%= coupon._id %>`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: result.message,
                        timer: 2000,
                        showConfirmButton: false
                    });
                    
                    setTimeout(() => {
                        window.location.href = '/admin/coupons';
                    }, 1500);
                } else {
                    if (result.errors) {
                        let errorMessage = 'Please fix the following errors:\n';
                        for (const field in result.errors) {
                            errorMessage += `• ${result.errors[field]}\n`;
                        }
                        Swal.fire({
                            icon: 'error',
                            title: 'Validation Error',
                            text: errorMessage
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: result.message || 'Failed to update coupon'
                        });
                    }
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An error occurred while updating the coupon'
                });
            });
        }

        // Delete coupon function
        function deleteCoupon() {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to delete this coupon? This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/coupons/<%= coupon._id %>`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted!',
                                text: data.message,
                                timer: 2000,
                                showConfirmButton: false
                            });
                            
                            setTimeout(() => {
                                window.location.href = '/admin/coupons';
                            }, 1500);
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: data.message || 'Failed to delete coupon'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: 'An error occurred while deleting the coupon'
                        });
                    });
                }
            });
        }
    </script>
</body>

</html>
